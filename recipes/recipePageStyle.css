html, body {
    background-attachment: fixed;
    /* bg fixed in position as you scroll */
    background-image: url("images/cookingIngredients1.jpg");
    background-repeat: no-repeat;
    /* Do not repeat bg image */
    background-position: center;
    /* Center the bg image */
    background-size: cover;
    /* Scale the bg image to be as large as possible, can also use 100% */
    font-family: "Verdana", "Arial", "Tahoma", "Geneva", sans-serif;
    /* By default there is a little gap around the edge of the webpage */
    margin: 0 0 0 0;
}

/* 
    The background-repeat property can also be used to control how it repeats. 
    The space value will result in cropped images; it means "repeat, and add space 
    between the elements so there is no cropping".  Note that this property does not 
    let you directly manipulate the amount of spacing. That is calculated for you.
 */

/* 
    backgroun-size: contain and cover
    The contain value will put the entire image into the space of the element, however, 
    the space of the element may not be completely filled if the aspect ratio of the element 
    and the image do not match.  The cover value is the opposite. It will completely fill 
    the element but the image may be cropped off two opposite sides.  Neither contain or cover 
    will distort or squish the image.  Its aspect ratio is maintained.
    It can also be used to state exact sizes, e.g. background-size: 50% auto; (50% of parent)
 */

/* 
Padding creates extra space within an element, while margin creates extra space around an element! 
*/

h1 {
    max-width: 1000px;
    margin: auto;
    /* Need some space above and under the title */
    margin-top: 2.5rem;
    margin-bottom: 2.5rem;
    border: 0.5rem solid white;
    border-radius: 5px;
    /* Padding gives space between content and border */
    padding-top: 20px;
    padding-bottom: 20px;
    text-align: center;
    background: #2029adab;
    background-size: 100px;
    color: white;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.4);
}

/* 
    Pseudo Classes allow us to apply styles to the different states of an element. 
    Or to various children of an element based on their index, or to other interactions with the browser. 
*/

a:link {
    /* The links initial color */
    color: #202aad;
    text-decoration: none;
}

a:hover {
    /* What color the links change to when hovering over it */
    color: #13185a;
    /* common values for cursor are: 
    default, pointer, text, move, grab, help, crosshair, wait, not-allowed, zoom-in...etc. */
    cursor: pointer;
    font-style: italic;
}

a:visited {
    /* What color the links are after clicking and visiting them */
    color: purple;
}

.dropdown-menu {
    /* these 3 doesn't really do anything */
    margin: auto;
    display: block;
    text-align: center;

    border: 0.5rem solid red; /*for debugging*/
    margin-bottom: 2.5rem;
    /* Same font choices as h1 and h2 */
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

.dropdown-button {
    margin: auto;
    display: block;
    /* The look of the button */
    background-color: #2029ad;
    /* the text color is white and of size 1rem*/
    color: white;
    font-size: 1rem;
    padding: 1rem;
    border: 0.5rem solid white;
    border-radius: 5px;
    width: 200px;
    box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.4);
}

.dropdown-button:hover {
    /* when cursor hovering over button, change to this color */
    background-color: #5b83f3;
}

.dropdown-content {
    border: 3px solid purple;
    text-align: center;
    margin: auto;
    /* the menu content is hidden until you hover over */
    display: initial;
    position: absolute;
    background-color: white;
    box-shadow: 0px 10px 16px 0px rgba(0, 0, 0, 0.5);
    /* Stack order of element, 
        An element with greater stack order is always in front of an element with a lower stack order.
    */
    /* z-index: 1; unneeded here */
}

/* so only display content if hovering over */
.dropdown-menu:hover .dropdown-content {
    margin: auto;
    display: inline-block;
}

.dropdown-content a {
    /* This makes the recipe names display one after another below, instead of side to side */
    display: block;
    /* Same width as the dropdown-button */
    width: 200px;
    /* Add some top and bottom padding */
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    /* Center each recipe name */
    text-align: center;
}

.dropdown-content a:hover {
    /* so only applies to links in the nav menu, and when you hover over them */
    background-color: #ddd;
}

/* 
display is the type of rendering box of an element.
block - Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width
*/

article {
    background-color: #fffefec0;
    max-width: 1000px;
    margin: auto;
    /* Need some space between each article */
    margin-bottom: 2.5rem;
    border: 0.2rem solid white;
    border-radius: 5px;
    box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.4);
}

h2 {
    text-align: center;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    margin: 0;
    padding: 1rem;
    background-color: white;
}

img {
    display: block;
    /* Set the margin property to auto to horizontally center the element within its container. In this case, center left right of article. */
    /* Set margin to auto if using width */
    margin-left: auto;
    margin-right: auto;
    max-width: 500px;
    /* Blue double border around image */
    border: 10px double #2029ad;
    border-radius: 20px;
    /* border-style: outset; */
    /* border-radius: 50%; makes image rounded */
}

figcaption {
    /* Now caption of image is at center of page */
    text-align: center;
    font-style: italic;
}

article h3, article ul, article ol {
    /* For h3, ul and ol that are inside article */
    margin-left: 8%;
    margin-right: 8%;
    /* border: 1px solid black; debugging purposes */
}

ol li {
    /* For any li that is under ordered list (essentially the "Steps" part) */
    line-height: 2.5rem;
}

ul li {
    line-height: 1.5rem;
}

#footer {
    width: 100%;
    height: 60px;
    background: #1782e69c;
    text-align: center;
}

#footer>p {
    font-style: italic;
    margin-bottom: 0px;
}

/* Scenario: 
Your <article> contains several paragraphs of text (<p>). 
You want more space between the individual paragraphs. 
Your "go to" property when needing to adjust positioning should always be margin. 
In this situation, simply adjusting the top or bottom margins ( margin-top margin-bottom) would suffice.
*/